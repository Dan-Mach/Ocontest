# Generated by Django 5.2.3 on 2025-06-23 09:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('creator', 'Creator'), ('brand', 'Brand'), ('admin', 'Admin')], default='creator', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
            ],
            options={
                'verbose_name': 'Creator',
                'verbose_name_plural': 'Creators',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='BrandProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('company_description', models.TextField(blank=True, max_length=1000)),
                ('industry', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True)),
                ('company_size', models.CharField(choices=[('startup', 'Startup (1-10)'), ('small', 'Small (11-50)'), ('medium', 'Medium (51-200)'), ('large', 'Large (201-1000)'), ('enterprise', 'Enterprise (1000+)')], default='startup', max_length=20)),
                ('company_logo', models.ImageField(blank=True, upload_to='brand_logos/')),
                ('social_media_links', models.JSONField(blank=True, default=dict, help_text='Social media links (e.g., LinkedIn, Twitter, Facebook)')),
                ('contests_created', models.PositiveIntegerField(default=0)),
                ('total_prize_money', models.DecimalField(decimal_places=2, default=0, help_text='Total prize money awarded', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='brand_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Brand Profile',
                'verbose_name_plural': 'Brand Profiles',
            },
        ),
        migrations.CreateModel(
            name='CreatorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Tell us about yourself and your creative style', max_length=500)),
                ('address', models.TextField(blank=True, help_text='Your physical address', max_length=500)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('specialties', models.JSONField(blank=True, default=list, help_text='List of creative specialties (e.g., Animation, Motion Graphics)')),
                ('experience_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert'), ('professional', 'Professional')], default='beginner', max_length=20)),
                ('profile_picture', models.ImageField(blank=True, upload_to='creator_pictures/')),
                ('portfolio_url', models.URLField(blank=True, help_text='Link to your portfolio or showreel')),
                ('social_media_links', models.JSONField(blank=True, default=dict, help_text='Social media links (e.g., YouTube, Vimeo, Instagram)')),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, help_text='Total earnings from contest wins', max_digits=10)),
                ('contest_wins', models.PositiveIntegerField(default=0)),
                ('contest_participations', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='creator_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Creator Profile',
                'verbose_name_plural': 'Creator Profiles',
            },
        ),
    ]
